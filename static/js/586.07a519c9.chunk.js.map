{"version":3,"file":"static/js/586.07a519c9.chunk.js","mappings":"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","sources":["components/MovieList/MovieListStyles.jsx","components/MovieList/MovieList.jsx","pages/CommonPageStyles.jsx","components/MoviesSearch/MoviesSearchStyles.jsx","components/MoviesSearch/MoviesSearch.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst List = styled.ul`\n  list-style: disc;\n  padding-left: 20px;\n  cursor: pointer;\n`;\n\nconst Item = styled.li`\n  padding: 5px 0;\n`;\n\nconst LinkTo = styled(Link)`\n  font-weight: 500;\n  color: inherit;\n  &:hover,\n  &:focus {\n    color: #ee3d3d;\n  }\n  text-decoration: none;\n`;\n\nexport { List, Item, LinkTo };\n","import PropTypes from 'prop-types';\nimport { List, Item, LinkTo } from './MovieListStyles';\n\nconst MovieList = ({ list, state }) => {\n  return (\n    <List>\n      {list.map(({ title, id }) => (\n        <Item key={id}>\n          <LinkTo key={id} to={`/movies/${id}`} state={state}>\n            {title}\n          </LinkTo>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  state: PropTypes.object.isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nconst PageHeading = styled.h1`\n  font-size: 28px;\n  font-weight: 500;\n  margin-bottom: 20px;\n`;\n\nconst PageHeadingHidden = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport { PageHeading, PageHeadingHidden };\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  border: 1px solid #cdcdcd;\n  border-radius: 3px;\n  overflow: hidden;\n  margin-bottom: 20px;\n  &:hover,\n  &:focus {\n    border-color: #353535;\n  }\n`;\n\nconst Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  background-color: inherit;\n  border: none;\n  padding: 5px;\n  &::placeholder {\n    font: inherit;\n  }\n`;\n\nconst FormButton = styled.button`\n  display: inline-block;\n  width: 60px;\n  height: 30px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport { Form, Input, FormButton };\n","import PropTypes from 'prop-types';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form, Input, FormButton } from './MoviesSearchStyles';\n\nconst MoviesSearch = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n  // console.log(query);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n  };\n\n  const handleInputChange = e => {\n    const input = e.target.value.toLowerCase();\n    const params = input !== '' ? { query: input.trim() } : {};\n    setSearchParams(params);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"searchInput\"\n        value={query}\n        onChange={handleInputChange}\n        autoComplete=\"off\"\n        // autoFocus\n        placeholder=\"Search movies\"\n      />\n      <FormButton type=\"submit\">Search</FormButton>\n    </Form>\n  );\n};\n\nMoviesSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default MoviesSearch;\n","import MoviesSearch from 'components/MoviesSearch';\nimport MovieList from 'components/MovieList';\n\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchMovieByKeyword } from 'services/api';\nimport { PageHeadingHidden } from './CommonPageStyles';\n\nconst Movies = () => {\n  const lastSearchListUnparsed = window.localStorage.getItem('movies');\n  const lastSearchListParsed = JSON.parse(lastSearchListUnparsed);\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState(() => {\n    return lastSearchListParsed ?? [];\n  });\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    async function fetchMovie() {\n      const filmList = await fetchMovieByKeyword(searchQuery);\n      const films = filmList.results;\n      setMovies(\n        films &&\n          films.map(film => ({\n            id: film['id'],\n            title: film['title'],\n            year: film['release_date'].substring(0, 4),\n          }))\n      );\n    }\n    fetchMovie();\n  }, [searchQuery]);\n\n  useEffect(() => {\n    window.localStorage.setItem('movies', JSON.stringify(movies));\n  }, [movies]);\n\n  return (\n    <>\n      <PageHeadingHidden>Search the movie by keyword</PageHeadingHidden>\n      <MoviesSearch onSubmit={setSearchQuery} />\n      {movies.length > 0 ? (\n        <MovieList list={movies} state={{ from: location }} />\n      ) : (\n        <p>\n          Sorry, no pictures were found for your query, please try another one!\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","LinkTo","Link","_templateObject3","_ref","list","state","_jsx","children","map","_ref2","title","id","to","concat","PageHeading","PageHeadingHidden","Form","Input","FormButton","_searchParams$get","onSubmit","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","_jsxs","e","preventDefault","type","name","value","onChange","input","target","toLowerCase","params","trim","autoComplete","placeholder","lastSearchListUnparsed","window","localStorage","getItem","lastSearchListParsed","JSON","parse","_useState","useState","_useState2","searchQuery","setSearchQuery","_useState3","_useState4","movies","setMovies","location","useLocation","useEffect","_fetchMovie","_asyncToGenerator","_regeneratorRuntime","_callee","filmList","films","_context","prev","next","fetchMovieByKeyword","sent","results","film","year","substring","stop","apply","arguments","fetchMovie","setItem","stringify","_Fragment","MoviesSearch","length","MovieList","from"],"sourceRoot":""}