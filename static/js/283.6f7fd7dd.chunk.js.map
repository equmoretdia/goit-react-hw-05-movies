{"version":3,"file":"static/js/283.6f7fd7dd.chunk.js","mappings":"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","sources":["pages/CommonPageStyles.jsx","pages/MovieDetailsStyles.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst PageHeading = styled.h1`\n  font-size: 28px;\n  font-weight: 500;\n  margin-bottom: 20px;\n`;\n\nconst PageHeadingHidden = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nconst List = styled.ul`\n  list-style: disc;\n  padding-left: 20px;\n  cursor: pointer;\n`;\n\nconst Item = styled.li`\n  padding: 5px 0;\n`;\n\nconst LinkTo = styled(Link)`\n  font-weight: 500;\n  color: inherit;\n  &:hover,\n  &:focus {\n    color: #ee3d3d;\n  }\n  text-decoration: none;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  border: 1px solid #cdcdcd;\n  border-radius: 3px;\n  overflow: hidden;\n  margin-bottom: 20px;\n  &:hover,\n  &:focus {\n    border-color: #353535;\n  }\n`;\n\nconst Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  background-color: inherit;\n  border: none;\n  padding: 5px;\n  &::placeholder {\n    font: inherit;\n  }\n`;\n\nconst FormButton = styled.button`\n  display: inline-block;\n  width: 60px;\n  height: 30px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport {\n  PageHeading,\n  PageHeadingHidden,\n  List,\n  Item,\n  LinkTo,\n  Form,\n  Input,\n  FormButton,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Heading = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n  width: 90px;\n  height: 30px;\n  border: 1px solid #cdcdcd;\n  border-radius: 3px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  margin-bottom: 10px;\n  &:hover,\n  &:focus {\n    border-width: 2px;\n    border-color: #353535;\n  }\n`;\n\nconst GoBack = styled(Link)`\n  font-size: 13px;\n  font-weight: 700;\n  color: #000000;\n  text-decoration: none;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: start;\n  gap: 20px;\n  margin-bottom: 20px;\n  padding-bottom: 5px;\n  box-shadow: 0px 2px 1px -1px rgba(46, 47, 66, 0.08),\n    0px 2px 1px -1px rgba(46, 47, 66, 0.16),\n    0px 3px 6px -6px rgba(46, 47, 66, 0.08);\n`;\n\nconst Poster = styled.img`\n  display: block;\n  width: 100%;\n  max-width: 250px;\n  height: auto;\n`;\n\nconst Details = styled.div`\n  min-width: 200px;\n  max-width: 800px;\n`;\n\nconst Title = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  margin-bottom: 20px;\n`;\n\nconst Overview = styled.h3`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 20px;\n`;\n\nconst Genres = styled.h4`\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\n\nconst Genre = styled.li`\n  padding: 3px 0;\n`;\n\nconst Text = styled.p`\n  margin-bottom: 20px;\n`;\n\nconst AdditionalInfo = styled.div`\n  box-shadow: 0px 2px 1px -1px rgba(46, 47, 66, 0.08),\n    0px 2px 1px -1px rgba(46, 47, 66, 0.16),\n    0px 3px 6px -6px rgba(46, 47, 66, 0.08);\n`;\n\nexport {\n  Heading,\n  Button,\n  GoBack,\n  Wrapper,\n  Poster,\n  Details,\n  Title,\n  Overview,\n  Genres,\n  Genre,\n  Text,\n  AdditionalInfo,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport {\n  Heading,\n  Button,\n  GoBack,\n  Wrapper,\n  Poster,\n  Details,\n  Title,\n  Overview,\n  Genres,\n  Genre,\n  Text,\n  AdditionalInfo,\n} from './MovieDetailsStyles';\nimport { List, Item, LinkTo } from './CommonPageStyles';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\n\nimport Placeholder from 'img/placeholder.jpg';\n\nconst MovieDetails = () => {\n  const [{ title, year, score, image, overview, genres }, setFilm] = useState({\n    title: null,\n    year: null,\n    score: null,\n    image: null,\n    overview: null,\n    genres: null,\n  });\n\n  const location = useLocation();\n  console.log(location);\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  console.log(backLinkLocationRef);\n\n  const { movieId } = useParams();\n\n  async function fetchMovieById(id) {\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/movie/${id}?language=en-US&api_key=77971c184b7d14036ed9c9196e488377`\n      );\n      const movieDetails = await response.json();\n      // console.log(movieDetails);\n      return movieDetails;\n    } catch (error) {\n      console.log(`An error occurred: ${error.message}`);\n    }\n  }\n\n  useEffect(() => {\n    async function fetchMovie() {\n      const filmDetails = await fetchMovieById(movieId);\n      const percentageScore = Math.round(filmDetails['vote_average'] * 10, 0);\n      setFilm({\n        title: filmDetails['title'],\n        year: filmDetails['release_date'].substring(0, 4),\n        score: percentageScore,\n        image: filmDetails['poster_path'],\n        overview: filmDetails['overview'],\n        genres: filmDetails['genres'],\n      });\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      <Heading>Chosen movie details</Heading>\n      <Button>\n        <FaLongArrowAltLeft />\n        <GoBack to={backLinkLocationRef.current}>Go back</GoBack>\n      </Button>\n      <Wrapper>\n        {image ? (\n          <Poster\n            src={`https://image.tmdb.org/t/p/w300/${image}`}\n            alt=\"film poster\"\n          />\n        ) : (\n          <Poster src={Placeholder} alt=\"placeholder\" />\n        )}\n        <Details>\n          <Title>{`${title}(${year ? year : 'YYYY'})`}</Title>\n          <Text>{`User Score: ${score}%`}</Text>\n          <Overview>Overview</Overview>\n          <Text>{overview}</Text>\n          <Genres>Genres</Genres>\n          <ul>\n            {genres &&\n              genres.map(genre => <Genre key={genre.id}>{genre.name}</Genre>)}\n          </ul>\n        </Details>\n      </Wrapper>\n      <AdditionalInfo>\n        <Text>Additional information:</Text>\n        <List>\n          <Item>\n            <LinkTo to=\"cast\">Cast</LinkTo>\n          </Item>\n          <Item>\n            <LinkTo to=\"reviews\">Reviews</LinkTo>\n          </Item>\n        </List>\n      </AdditionalInfo>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["PageHeading","styled","_templateObject","_taggedTemplateLiteral","PageHeadingHidden","_templateObject2","List","_templateObject3","Item","_templateObject4","LinkTo","Link","_templateObject5","Form","_templateObject6","Input","_templateObject7","FormButton","_templateObject8","Heading","Button","GoBack","Wrapper","Poster","Details","Title","Overview","Genres","_templateObject9","Genre","_templateObject10","Text","_templateObject11","AdditionalInfo","_templateObject12","_location$state$from","_location$state","_useState","useState","title","year","score","image","overview","genres","_useState2","_slicedToArray","_useState2$","setFilm","location","useLocation","console","log","backLinkLocationRef","useRef","state","from","movieId","useParams","fetchMovieById","_x","_fetchMovieById","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee2","id","response","movieDetails","_context2","prev","next","fetch","concat","sent","json","abrupt","t0","message","stop","useEffect","_fetchMovie","_callee","filmDetails","percentageScore","_context","Math","round","substring","fetchMovie","_jsxs","_Fragment","children","_jsx","FaLongArrowAltLeft","to","current","src","alt","map","genre","name","Outlet"],"sourceRoot":""}