{"version":3,"file":"static/js/134.92b34f59.chunk.js","mappings":"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","sources":["pages/CommonPageStyles.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst PageHeading = styled.h1`\n  font-size: 28px;\n  font-weight: 500;\n  margin-bottom: 20px;\n`;\n\nconst PageHeadingHidden = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nconst List = styled.ul`\n  list-style: disc;\n  padding-left: 20px;\n  cursor: pointer;\n`;\n\nconst Item = styled.li`\n  padding: 5px 0;\n`;\n\nconst LinkTo = styled(Link)`\n  font-weight: 500;\n  color: inherit;\n  &:hover,\n  &:focus {\n    color: #ee3d3d;\n  }\n  text-decoration: none;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  border: 1px solid #cdcdcd;\n  border-radius: 3px;\n  overflow: hidden;\n  margin-bottom: 20px;\n  &:hover,\n  &:focus {\n    border-color: #353535;\n  }\n`;\n\nconst Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  background-color: inherit;\n  border: none;\n  padding: 5px;\n  &::placeholder {\n    font: inherit;\n  }\n`;\n\nconst FormButton = styled.button`\n  display: inline-block;\n  width: 60px;\n  height: 30px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport {\n  PageHeading,\n  PageHeadingHidden,\n  List,\n  Item,\n  LinkTo,\n  Form,\n  Input,\n  FormButton,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport {\n  PageHeadingHidden,\n  List,\n  Item,\n  LinkTo,\n  Form,\n  Input,\n  FormButton,\n} from './CommonPageStyles';\n\nconst Movies = () => {\n  const [searchInput, setSearchInput] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const lastSearchListUnparsed = window.localStorage.getItem('movies');\n  const lastSearchListParsed = JSON.parse(lastSearchListUnparsed);\n  const [movies, setMovies] = useState(() => {\n    return lastSearchListParsed ?? [];\n  });\n\n  const location = useLocation();\n  // console.log(location);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieId = searchParams.get('movieId') ?? '';\n  console.log(movieId);\n\n  async function fetchMovieByKeyword(query) {\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&language=en-US&api_key=77971c184b7d14036ed9c9196e488377`\n      );\n      const movieList = await response.json();\n      console.log(movieList);\n      return movieList;\n    } catch (error) {\n      console.log(`An error occurred: ${error.message}`);\n    }\n  }\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    async function fetchMovie() {\n      const filmList = await fetchMovieByKeyword(searchQuery);\n      const films = filmList.results;\n      setMovies(\n        films &&\n          films.map(film => ({\n            id: film['id'],\n            title: film['title'],\n            year: film['release_date'].substring(0, 4),\n          }))\n      );\n    }\n    fetchMovie();\n  }, [searchQuery]);\n\n  useEffect(() => {\n    window.localStorage.setItem('movies', JSON.stringify(movies));\n  }, [movies]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchInput.trim() === '') {\n      setSearchParams({});\n    }\n\n    setSearchQuery(searchInput.trim());\n    setSearchInput('');\n  };\n\n  const handleInputChange = e => {\n    const input = e.target.value;\n    const params = input !== '' ? { query: input.trim() } : {};\n    setSearchInput(input.toLowerCase());\n    setSearchParams(params);\n  };\n\n  return (\n    <>\n      <PageHeadingHidden>Search the movie by keyword</PageHeadingHidden>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"searchInput\"\n          value={searchInput}\n          onChange={handleInputChange}\n          autoComplete=\"off\"\n          // autoFocus\n          placeholder=\"Search movies\"\n        />\n        <FormButton type=\"submit\">Search</FormButton>\n      </Form>\n      <List>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <LinkTo\n              key={movie.id}\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >{`${movie.title} (${movie.year ? movie.year : '????'})`}</LinkTo>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["PageHeading","styled","_templateObject","_taggedTemplateLiteral","PageHeadingHidden","_templateObject2","List","_templateObject3","Item","_templateObject4","LinkTo","Link","_templateObject5","Form","_templateObject6","Input","_templateObject7","FormButton","_templateObject8","_searchParams$get","_useState","useState","_useState2","_slicedToArray","searchInput","setSearchInput","_useState3","_useState4","searchQuery","setSearchQuery","lastSearchListUnparsed","window","localStorage","getItem","lastSearchListParsed","JSON","parse","_useState5","_useState6","movies","setMovies","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieId","get","fetchMovieByKeyword","_x","_fetchMovieByKeyword","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee2","query","response","movieList","_context2","prev","next","fetch","concat","sent","json","console","log","abrupt","t0","message","stop","useEffect","_fetchMovie","_callee","filmList","films","_context","results","map","film","id","title","year","substring","fetchMovie","setItem","stringify","_jsxs","_Fragment","children","_jsx","onSubmit","e","preventDefault","trim","type","name","value","onChange","input","target","params","toLowerCase","autoComplete","placeholder","movie","to","state","from"],"sourceRoot":""}