{"version":3,"file":"static/js/196.9db8d8d7.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetailsStyles.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Heading = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n  width: 90px;\n  height: 30px;\n  border: 1px solid #cdcdcd;\n  border-radius: 3px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  margin-bottom: 10px;\n  &:hover,\n  &:focus {\n    border-width: 2px;\n    border-color: #353535;\n  }\n`;\n\nconst GoBack = styled(Link)`\n  font-size: 13px;\n  font-weight: 700;\n  color: #000000;\n  text-decoration: none;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: start;\n  gap: 20px;\n  margin-bottom: 20px;\n  padding-bottom: 5px;\n  box-shadow: 0px 2px 1px -1px rgba(46, 47, 66, 0.08),\n    0px 2px 1px -1px rgba(46, 47, 66, 0.16),\n    0px 3px 6px -6px rgba(46, 47, 66, 0.08);\n`;\n\nconst Poster = styled.img`\n  display: block;\n  width: 100%;\n  max-width: 250px;\n  height: auto;\n`;\n\nconst Details = styled.div`\n  min-width: 200px;\n  max-width: 800px;\n`;\n\nconst Title = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  margin-bottom: 20px;\n`;\n\nconst Overview = styled.h3`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 20px;\n`;\n\nconst Genres = styled.h4`\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\n\nconst Genre = styled.li`\n  padding: 3px 0;\n`;\n\nconst Text = styled.p`\n  margin-bottom: 20px;\n`;\n\nconst AdditionalInfo = styled.div`\n  box-shadow: 0px 2px 1px -1px rgba(46, 47, 66, 0.08),\n    0px 2px 1px -1px rgba(46, 47, 66, 0.16),\n    0px 3px 6px -6px rgba(46, 47, 66, 0.08);\n`;\n\nconst List = styled.ul`\n  list-style: disc;\n  padding-left: 20px;\n  cursor: pointer;\n`;\n\nconst Item = styled.li`\n  padding: 5px 0;\n`;\n\nconst LinkTo = styled(Link)`\n  font-weight: 500;\n  color: inherit;\n  &:hover,\n  &:focus {\n    color: #ee3d3d;\n  }\n  text-decoration: none;\n`;\n\nexport {\n  Heading,\n  Button,\n  GoBack,\n  Wrapper,\n  Poster,\n  Details,\n  Title,\n  Overview,\n  Genres,\n  Genre,\n  Text,\n  AdditionalInfo,\n  List,\n  Item,\n  LinkTo,\n};\n","import Placeholder from 'img/placeholder.jpg';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieOptions, optionsAPI } from 'services/api';\nimport {\n  Heading,\n  Button,\n  GoBack,\n  Wrapper,\n  Poster,\n  Details,\n  Title,\n  Overview,\n  Genres,\n  Genre,\n  Text,\n  AdditionalInfo,\n  List,\n  Item,\n  LinkTo,\n} from './MovieDetailsStyles';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\n\nconst MovieDetails = () => {\n  const [{ title, year, score, image, overview, genres }, setFilm] = useState({\n    title: null,\n    year: null,\n    score: null,\n    image: null,\n    overview: null,\n    genres: [],\n  });\n\n  const location = useLocation();\n  console.log(location);\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  console.log(backLinkLocationRef);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchMovie() {\n      const filmDetails = await fetchMovieOptions(optionsAPI.movie, movieId);\n      const percentageScore = Math.round(filmDetails['vote_average'] * 10, 0);\n      setFilm({\n        title: filmDetails['title'],\n        year: filmDetails['release_date'].substring(0, 4),\n        score: percentageScore,\n        image: filmDetails['poster_path'],\n        overview: filmDetails['overview'],\n        genres: filmDetails['genres'],\n      });\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  console.log(genres);\n\n  return (\n    <>\n      <Heading>Chosen movie details</Heading>\n      <Button>\n        <FaLongArrowAltLeft />\n        <GoBack to={backLinkLocationRef.current}>Go back</GoBack>\n      </Button>\n      <Wrapper>\n        <Poster\n          src={image ? `https://image.tmdb.org/t/p/w300/${image}` : Placeholder}\n          alt=\"film poster\"\n        />\n        <Details>\n          <Title>\n            {title} {year ? `(${year})` : ''}\n          </Title>\n          {/* <Text>{`User Score: ${score}%`}</Text> */}\n          <Text>\n            {score\n              ? `User Score: ${score}%`\n              : 'User Score: No information available '}\n          </Text>\n          <Overview>Overview</Overview>\n          <Text>{overview ? overview : 'No information available '}</Text>\n          <Genres>Genres</Genres>\n          <ul>\n            {genres.length > 0 ? (\n              genres.map(genre => <Genre key={genre.id}>{genre.name}</Genre>)\n            ) : (\n              <p>No information available</p>\n            )}\n          </ul>\n        </Details>\n      </Wrapper>\n      <AdditionalInfo>\n        <Text>Additional information:</Text>\n        <List>\n          <Item>\n            <LinkTo to=\"cast\">Cast</LinkTo>\n          </Item>\n          <Item>\n            <LinkTo to=\"reviews\">Reviews</LinkTo>\n          </Item>\n        </List>\n      </AdditionalInfo>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Heading","styled","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","GoBack","Link","_templateObject3","Wrapper","_templateObject4","Poster","_templateObject5","Details","_templateObject6","Title","_templateObject7","Overview","_templateObject8","Genres","_templateObject9","Genre","_templateObject10","Text","_templateObject11","AdditionalInfo","_templateObject12","List","_templateObject13","Item","_templateObject14","LinkTo","_templateObject15","_location$state$from","_location$state","_useState","useState","title","year","score","image","overview","genres","_useState2","_slicedToArray","_useState2$","setFilm","location","useLocation","console","log","backLinkLocationRef","useRef","state","from","movieId","useParams","useEffect","_fetchMovie","_asyncToGenerator","_regeneratorRuntime","_callee","filmDetails","percentageScore","_context","prev","next","fetchMovieOptions","optionsAPI","sent","Math","round","substring","stop","apply","arguments","fetchMovie","_jsxs","_Fragment","children","_jsx","FaLongArrowAltLeft","to","current","src","concat","alt","length","map","genre","name","id","Outlet"],"sourceRoot":""}