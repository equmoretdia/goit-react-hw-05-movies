{"version":3,"file":"static/js/884.82fb21c9.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst MovieDetails = () => {\n  const [{ title, year, score, image, overview, genres }, setFilm] = useState({\n    title: null,\n    year: null,\n    score: null,\n    image: null,\n    overview: null,\n    genres: null,\n  });\n  const { movieId } = useParams();\n\n  async function fetchMovieById(id) {\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/movie/${id}?language=en-US&api_key=77971c184b7d14036ed9c9196e488377`\n      );\n      const movieDetails = await response.json();\n      // console.log(movieDetails);\n      return movieDetails;\n    } catch (error) {\n      console.log(`An error occurred: ${error.message}`);\n      toast.error(`An error occurred: ${error.message}`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n    }\n  }\n\n  useEffect(() => {\n    async function fetchMovie() {\n      const filmDetails = await fetchMovieById(movieId);\n      const percentageScore = Math.round(filmDetails['vote_average'] * 10, 0);\n      setFilm({\n        title: filmDetails['title'],\n        year: filmDetails['release_date'].substring(0, 4),\n        score: percentageScore,\n        image: filmDetails['poster_path'],\n        overview: filmDetails['overview'],\n        genres: filmDetails['genres'],\n      });\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h1>pls hide me</h1>\n      <button>Go back</button>\n      <div>\n        {image && (\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${image}`}\n            alt=\"film poster\"\n          />\n        )}\n        <div>\n          <h2>{`${title}(${year ? year : 'YYYY'})`}</h2>\n          <p>{`User Score: ${score}%`}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <ul>\n            {genres &&\n              genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n          </ul>\n        </div>\n      </div>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["_useState","useState","title","year","score","image","overview","genres","_useState2","_slicedToArray","_useState2$","setFilm","movieId","useParams","fetchMovieById","_x","_fetchMovieById","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee2","id","response","movieDetails","_context2","prev","next","fetch","concat","sent","json","abrupt","t0","console","log","message","toast","position","theme","stop","useEffect","_fetchMovie","_callee","filmDetails","percentageScore","_context","Math","round","substring","fetchMovie","_jsxs","children","_jsx","src","alt","map","genre","name","Link","to","Outlet"],"sourceRoot":""}