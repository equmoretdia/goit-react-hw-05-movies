{"version":3,"file":"static/js/288.12e36a46.chunk.js","mappings":"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","sources":["components/MovieList/MovieListStyles.jsx","components/MovieList/MovieList.jsx","components/Search/SearchStyles.jsx","components/Search/Search.jsx","pages/Movies/MoviesStyles.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst List = styled.ul`\n  list-style: disc;\n  padding-left: 20px;\n  cursor: pointer;\n`;\n\nconst Item = styled.li`\n  padding: 5px 0;\n`;\n\nconst LinkTo = styled(Link)`\n  font-weight: 500;\n  color: inherit;\n  &:hover,\n  &:focus {\n    color: #ee3d3d;\n  }\n  text-decoration: none;\n`;\n\nexport { List, Item, LinkTo };\n","import { List, Item, LinkTo } from './MovieListStyles';\n\nconst MovieList = ({ list, state }) => {\n  return (\n    <List>\n      {list.map(({ title, id }) => (\n        <Item key={id}>\n          <LinkTo key={id} to={`/movies/${id}`} state={state}>\n            {title}\n          </LinkTo>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  border: 1px solid #cdcdcd;\n  border-radius: 3px;\n  overflow: hidden;\n  margin-bottom: 20px;\n  &:hover,\n  &:focus {\n    border-color: #353535;\n  }\n`;\n\nconst Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  background-color: inherit;\n  border: none;\n  padding: 5px;\n  &::placeholder {\n    font: inherit;\n  }\n`;\n\nconst FormButton = styled.button`\n  display: inline-block;\n  width: 60px;\n  height: 30px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport { Form, Input, FormButton };\n","import { useSearchParams } from 'react-router-dom';\nimport { Form, Input, FormButton } from './SearchStyles';\n\nconst Search = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n  console.log(query);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n  };\n\n  const handleInputChange = e => {\n    const input = e.target.value.toLowerCase();\n    const params = input !== '' ? { query: input.trim() } : {};\n    setSearchParams(params);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"searchInput\"\n        value={query}\n        onChange={handleInputChange}\n        autoComplete=\"off\"\n        // autoFocus\n        placeholder=\"Search movies\"\n      />\n      <FormButton type=\"submit\">Search</FormButton>\n    </Form>\n  );\n};\n\nexport default Search;\n","import styled from 'styled-components';\n\nconst PageHeadingHidden = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport { PageHeadingHidden };\n","import Search from 'components/Search';\nimport MovieList from 'components/MovieList';\n\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { PageHeadingHidden } from './MoviesStyles';\n\nconst Movies = () => {\n  const lastSearchListUnparsed = window.localStorage.getItem('movies');\n  const lastSearchListParsed = JSON.parse(lastSearchListUnparsed);\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState(() => {\n    return lastSearchListParsed ?? [];\n  });\n\n  const location = useLocation();\n\n  async function fetchMovieByKeyword(query) {\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&language=en-US&api_key=77971c184b7d14036ed9c9196e488377`\n      );\n      const movieList = await response.json();\n      console.log(movieList);\n      return movieList;\n    } catch (error) {\n      console.log(`An error occurred: ${error.message}`);\n    }\n  }\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    async function fetchMovie() {\n      const filmList = await fetchMovieByKeyword(searchQuery);\n      const films = filmList.results;\n      setMovies(\n        films &&\n          films.map(film => ({\n            id: film['id'],\n            title: film['title'],\n            year: film['release_date'].substring(0, 4),\n          }))\n      );\n    }\n    fetchMovie();\n  }, [searchQuery]);\n\n  useEffect(() => {\n    window.localStorage.setItem('movies', JSON.stringify(movies));\n  }, [movies]);\n\n  return (\n    <>\n      <PageHeadingHidden>Search the movie by keyword</PageHeadingHidden>\n      <Search onSubmit={setSearchQuery} />\n      <MovieList list={movies} state={{ from: location }} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","LinkTo","Link","_templateObject3","_ref","list","state","_jsx","children","map","_ref2","title","id","to","concat","Form","Input","FormButton","_searchParams$get","onSubmit","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","console","log","_jsxs","e","preventDefault","type","name","value","onChange","input","target","toLowerCase","params","trim","autoComplete","placeholder","PageHeadingHidden","lastSearchListUnparsed","window","localStorage","getItem","lastSearchListParsed","JSON","parse","_useState","useState","_useState2","searchQuery","setSearchQuery","_useState3","_useState4","movies","setMovies","location","useLocation","fetchMovieByKeyword","_x","_fetchMovieByKeyword","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee2","response","movieList","_context2","prev","next","fetch","sent","json","abrupt","t0","message","stop","useEffect","_fetchMovie","_callee","filmList","films","_context","results","film","year","substring","fetchMovie","setItem","stringify","_Fragment","Search","MovieList","from"],"sourceRoot":""}